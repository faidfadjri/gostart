package cmd

import (
	"fmt"
	"log"
	"os"
	"strings"

	"github.com/dave/jennifer/jen"
	"github.com/spf13/cobra"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"
)

var ServiceCmd = &cobra.Command{
	Use:   "service [name]",
	Short: "Create a new service",
	Args:  cobra.ExactArgs(1),
	Run: func(cmd *cobra.Command, args []string) {

		name := strings.ToLower(args[0])
		caser := cases.Title(language.English)
		structName := caser.String(name) + "Service"

		dir := fmt.Sprintf("src/infrastructure/services/%s", name)
		if err := os.MkdirAll(dir, os.ModePerm); err != nil {
			log.Fatalf("Failed to create service directory: %v", err)
		}

		file := jen.NewFile(name)
		file.PackageComment("Code generated by gostart. DO NOT EDIT.")

		file.Type().Id(structName).Struct()

		file.Func().
			Id("New" + structName).
			Params().
			Op("*").Id(structName).
			Block(
				jen.Return(jen.Op("&").Id(structName).Values()),
			)

		path := fmt.Sprintf("%s/service.go", dir)
		f, err := os.Create(path)
		if err != nil {
			log.Fatalf("Failed to create service.go file: %v", err)
		}
		defer f.Close()

		if err := file.Render(f); err != nil {
			log.Fatalf("Failed to render file: %v", err)
		}

		fmt.Println("âœ… Service created at:", path)
	},
}
